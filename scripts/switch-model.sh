#!/bin/bash
#
# switch-model.sh
# Switches the active LLM model for the BEND stack by updating the .env file.
#

set -e # Exit immediately if a command exits with a non-zero status.

# The script expects one argument: the model key from models.yaml
if [ -z "$1" ]; then
  echo "Usage: $0 <model_key>"
  echo "Example: $0 hermes"
  exit 1
fi

MODEL_KEY=$1
YAML_FILE="models.yaml"

# Check if yq is installed
if ! command -v yq &> /dev/null; then
    echo "Error: yq is not installed. Please install it to use this script."
    echo "On macOS: brew install yq"
    echo "On Debian/Ubuntu: sudo apt-get install yq"
    exit 1
fi

# Find the model entry in the YAML file and extract its properties
MODEL_INFO=$(yq e ".models[] | select(.key == \"$MODEL_KEY\")" "$YAML_FILE")

if [ -z "$MODEL_INFO" ]; then
  echo "Error: Model key '$MODEL_KEY' not found in $YAML_FILE"
  exit 1
fi

# Extract the filename and context size using yq
MODEL_FILENAME=$(echo "$MODEL_INFO" | yq e '.backend_model_name' -)
# Use the correct key for context length
MODEL_CONTEXT=$(echo "$MODEL_INFO" | yq e '.default_max_context_length' -)

# Check if we got valid data
if [ -z "$MODEL_FILENAME" ] || [ "$MODEL_FILENAME" == "null" ]; then
  echo "Error: 'backend_model_name' not found for model key '$MODEL_KEY' in $YAML_FILE"
  exit 1
fi
if [ -z "$MODEL_CONTEXT" ] || [ "$MODEL_CONTEXT" == "null" ]; then
  echo "Error: 'default_max_context_length' not found for model key '$MODEL_KEY' in $YAML_FILE"
  exit 1
fi

# Create or overwrite the .env file with the new configuration
{
  echo "# ==================================================="
  echo "# == BEND (Backend Enhanced Neural Dispatch) .env"
  echo "# ==================================================="
  echo "# This file is auto-generated by switch-model.sh. You can edit values below."
  echo ""
  echo "# --- Core Model Configuration ---"
  echo "MODEL_NAME=$MODEL_FILENAME"
  echo "MODEL_CONTEXT_SIZE=$MODEL_CONTEXT"
  echo "KOBOLD_GPU_LAYERS=99"
  echo "KOBOLD_THREADS=16"
  echo ""
  echo "# --- Service Configuration ---"
  echo "PIPER_VOICE=en_US-lessac-medium"
  echo "WHISPER_MODEL_NAME=ggml-small.en.bin"
  echo "WHISPER_GPU_LAYERS=99"
  echo ""
  echo "# --- Port Configuration ---"
  echo "OPENWEBUI_PORT=12002"
  echo "WHISPER_PORT=12003"
  echo "PIPER_PORT=12004"
  echo "GLANCES_PORT=12005"
  echo "QDRANT_PORT=12006"
  echo "RETRIEVER_PORT=12007"
  echo "VOICEPROXY_PORT=12008"
  echo "KOBOLD_PORT=12009"
  echo ""
  echo "# --- Security & Observability (Optional) ---"
  echo "BEND_API_KEY="
  echo "OTEL_EXPORTER_OTLP_ENDPOINT="
  echo ""
  echo "# --- Hugging Face Token (Optional) ---"
  echo "# Your Hugging Face Read Token for downloading gated models."
  echo "HF_TOKEN="
} > .env


echo "âœ… BEND configuration updated in .env file."
echo "You can now run './scripts/manage.sh up' to start the stack."